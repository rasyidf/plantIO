// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantIO.Data;

namespace Data.EF.Migrations
{
    [DbContext(typeof(CultivarDbContext))]
    [Migration("20200416152243_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("PlantIO.Entities.Cultivar.Cultivar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ScientificName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cultivars");
                });

            modelBuilder.Entity("PlantIO.Entities.Cultivar.CultivarIdentifier", b =>
                {
                    b.Property<Guid?>("DataSetId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CultivarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxonomicCode")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<string>("TaxonomicCodeVersion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<int?>("TaxaHierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Usage")
                        .HasColumnType("INTEGER");

                    b.HasKey("DataSetId", "CultivarId", "TaxonomicCode", "TaxonomicCodeVersion", "TaxaHierarchyId");

                    b.HasIndex("CultivarId");

                    b.HasIndex("TaxaHierarchyId");

                    b.ToTable("CultivarIdentifier");
                });

            modelBuilder.Entity("PlantIO.Entities.Cultivar.CultivarPopularName", b =>
                {
                    b.Property<Guid?>("DataSetId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LanguageCultureName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CultivarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Usage")
                        .HasColumnType("INTEGER");

                    b.HasKey("DataSetId", "LanguageCultureName", "CultivarId", "RegionId");

                    b.HasIndex("CultivarId");

                    b.ToTable("CultivarPopularName");
                });

            modelBuilder.Entity("PlantIO.Entities.Taxonomy.TaxaHierarchy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HierarchyKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxaPhilosophy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxonomicCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxonomicCodeVersion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaxaHierarchies");
                });

            modelBuilder.Entity("PlantIO.Entities.Taxonomy.TaxaHierarchyRank", b =>
                {
                    b.Property<int>("HierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxonType")
                        .HasColumnType("TEXT");

                    b.Property<int>("ConnectingTermUsage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("HierarchyId", "TaxonType");

                    b.ToTable("TaxaHierarchyRank");
                });

            modelBuilder.Entity("PlantIO.Entities.Taxonomy.TaxaHierarchyTaxonValue", b =>
                {
                    b.Property<int>("HierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxonType")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<Guid?>("CultivarIdentifierCultivarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CultivarIdentifierDataSetId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CultivarIdentifierTaxaHierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CultivarIdentifierTaxonomicCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CultivarIdentifierTaxonomicCodeVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("HierarchyId", "TaxonType");

                    b.HasIndex("CultivarIdentifierDataSetId", "CultivarIdentifierCultivarId", "CultivarIdentifierTaxonomicCode", "CultivarIdentifierTaxonomicCodeVersion", "CultivarIdentifierTaxaHierarchyId");

                    b.ToTable("TaxaHierarchyTaxonValue");
                });

            modelBuilder.Entity("PlantIO.Entities.Cultivar.CultivarIdentifier", b =>
                {
                    b.HasOne("PlantIO.Entities.Cultivar.Cultivar", "Cultivar")
                        .WithMany("Identifiers")
                        .HasForeignKey("CultivarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantIO.Entities.Taxonomy.TaxaHierarchy", "TaxaHierarchy")
                        .WithMany()
                        .HasForeignKey("TaxaHierarchyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlantIO.Entities.Cultivar.CultivarPopularName", b =>
                {
                    b.HasOne("PlantIO.Entities.Cultivar.Cultivar", null)
                        .WithMany("PopularNames")
                        .HasForeignKey("CultivarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlantIO.Entities.Taxonomy.TaxaHierarchyRank", b =>
                {
                    b.HasOne("PlantIO.Entities.Taxonomy.TaxaHierarchy", "Hierarchy")
                        .WithMany("Ranks")
                        .HasForeignKey("HierarchyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlantIO.Entities.Taxonomy.TaxaHierarchyTaxonValue", b =>
                {
                    b.HasOne("PlantIO.Entities.Taxonomy.TaxaHierarchy", "Hierarchy")
                        .WithMany()
                        .HasForeignKey("HierarchyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantIO.Entities.Cultivar.CultivarIdentifier", null)
                        .WithMany("TaxaHierarchyTaxonValues")
                        .HasForeignKey("CultivarIdentifierDataSetId", "CultivarIdentifierCultivarId", "CultivarIdentifierTaxonomicCode", "CultivarIdentifierTaxonomicCodeVersion", "CultivarIdentifierTaxaHierarchyId");
                });
#pragma warning restore 612, 618
        }
    }
}
